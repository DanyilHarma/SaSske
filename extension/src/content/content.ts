import { throttle } from "./utils";

let lastInteraction: number = Date.now();
let activeTime: number = 0;
let lastUpdate: number = Date.now();
const INACTIVITY_THRESHOLD = 3 * 60 * 1000; // 3 –º–∏–Ω—É—Ç
const SAVE_INTERVAL = 30 * 1000; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑ –≤ –ø–æ–ª –º–∏–Ω—É—Ç—ã
let currentSite: string | null = null;
let isActiveTab: boolean = true;
let trackerPaused = false;

chrome.runtime.onMessage.addListener((message) => {
    if (message.type === "TRACKER_PAUSED") {
        trackerPaused = message.paused;
        console.log(`‚è∏ –¢—Ä–µ–∫–µ—Ä ${trackerPaused ? "–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" : "–≤–∫–ª—é—á–µ–Ω"}`);
    }
});

chrome.runtime.sendMessage({ type: "GET_TRACKER_STATE" }, (response) => {
    trackerPaused = response?.paused || false;
});

chrome.runtime.sendMessage({ type: "GET_ACTIVE_SITE" }, (response) => {
    if (response?.site) {
        currentSite = response.site;
        console.log(`üîÑ –ü–æ–ª—É—á–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç: ${currentSite}`);
    }
});

chrome.runtime.onMessage.addListener((message) => {
    if (message.type === "UPDATE_SITE") {
        console.log(`üîÑ –í–∫–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞: ${message.site}`);
    }
    if (currentSite && currentSite !== message.site) {
        sendTimeToBackground();
    }
    currentSite = message.site;
    lastInteraction = Date.now();
    activeTime = 0;
});

const throttledUpdateInteractionTime = throttle(() => {
    if (trackerPaused || !isActiveTab) return;

    const now = Date.now();
    if (now - lastInteraction >= INACTIVITY_THRESHOLD) {
        lastUpdate = now;
    } else {
        activeTime += now - lastUpdate;
    }
    lastInteraction = now;
    lastUpdate = now;
}, 1000);

// –°–ª–µ–¥–∏–º –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
document.addEventListener("mousemove", throttledUpdateInteractionTime);
document.addEventListener("keydown", throttledUpdateInteractionTime);
document.addEventListener("scroll", throttledUpdateInteractionTime);

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥
setInterval(sendTimeToBackground, SAVE_INTERVAL);

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("visibilitychange", () => {
    isActiveTab = document.visibilityState === "visible";
    if (!isActiveTab) {
        sendTimeToBackground();
    }
});

window.addEventListener("beforeunload", sendTimeToBackground);

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ background.ts
function sendTimeToBackground() {
    if (!currentSite) return;
    const timeSpent = Math.round(activeTime / 1000);
    if (timeSpent > 0) {
        chrome.runtime.sendMessage({
            type: "SAVE_TIME",
            site: currentSite,
            timeSpent: timeSpent,
        });
        console.log(`‚è≥ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${timeSpent} —Å–µ–∫.`);
    }
    activeTime = 0; // –û–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
}
